@import url('https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700,800,900&display=swap');

*,
*::after,
*::before {
	box-sizing: border-box;
	font-family: 'Poppins', sans-serif;
	touch-action: manipulation;
	outline: none;
	box-shadow: none;
}

:root {
	--bg: hsl(240, 3%, 7%);
	--title: white;
	--text: white;
	--border: hsl(240, 2%, 23%);
	--alert: hsl(204, 7%, 85%);
	--active: hsl(200, 1%, 50%);
	--wrong: hsl(240, 2%, 23%);
}

.default {
	--correct: hsl(115, 29%, 43%);
	--wrong-location: hsl(49, 51%, 47%);
}

.colorblind {
	--correct: hsl(20, 90%, 59%);
	--wrong-location: hsl(209, 91%, 75%);
}

.three {
	--correct: hsl(340, 70%, 52%);
	--wrong-location: hsl(49, 90%, 62%)
}

.four {
	--correct: hsl(148, 54%, 60%);
	--wrong-location: hsl(314, 38%, 80%)
}

.five {
	--correct: hsl(71, 27%, 49%);
	--wrong-location: hsl(24, 83%, 45%)
}

.six {
	--correct: hsl(104, 16%, 73%);
	--wrong-location: hsl(180, 5%, 65%)
}

.seven {
	--correct: hsl(276, 20%, 61%);
	--wrong-location: hsl(199, 70%, 82%)
}

.title-container {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: row;
}

.title {
	font-size: 2.5em;
	font-weight: bold;
	display: flex;
	justify-content: center;
	align-items: center;
	color: var(--title);
	background-color: transparent;
	border: transparent;
}

body {
	background-color: var(--bg);
	display: flex;
	flex-direction: column;
	justify-content: center;
	padding-top: 1em;
	padding-bottom: 1em;
}

.content-container {
	background-color: var(--bg);
	font-size: clamp(.5rem, 2.5vmin, 1rem);
}

.keyboard {
	display: grid;
	grid-template-columns: repeat(20, minmax(auto, 1.25em));
	grid-auto-rows: 2.75em;
	gap: .3em;
	justify-content: center;
}

.key {
	font-size: inherit;
	grid-column: span 2;
	border: none;
	padding: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	background-color: hsl(240, 3%, 51%);
	color: var(--text);
	fill: var(--text);
	text-transform: uppercase;
	border-radius: .25em;
	cursor: pointer;
	user-select: none;
	transition: all 0.3s ease;
}

.key.large {
	grid-column: span 3;
}

.key.long {
	grid-column: span 6;
}

.key>svg {
	width: 1.5em;
	height: 1.5em;
}

.key:hover {
	--lightness-offset: 10%;
	transition: all 0.3s ease;
}

svg {
	pointer-events: none;
}

.key[data-color="wrong"] {
	background-color: var(--wrong)
}

.key[data-color="wrong-location"] {
	background-color: var(--wrong-location)
}

.key[data-color="correct"] {
	background-color: var(--correct)
}

.guess-grid {
	display: grid;
	justify-content: center;
	align-content: center;
	flex-grow: 1;
	grid-template-columns: repeat(5, 3.75em);
	grid-template-rows: repeat(8, 3.75em);
	gap: .25em;
	margin-bottom: 2em;
	width: 100%;
}

.tile {
	border-radius: .25em;
	transform: scale(1.0);
	color: var(--text);
	background-color: transparent;
	border: 0.05em solid var(--border);
	font-size: 2em;
	text-transform: uppercase;
	font-weight: bold;
	display: flex;
	justify-content: center;
	align-items: center;
	user-select: none;
	transition: transform 250ms linear;
}

.tile.shake {
	animation: shake 250ms ease-in-out;
}

.tile.dance {
	animation: dance 500ms ease-in-out;
}

.tile.flip {
	transform: rotateX(90deg);
}

.tile.enter {
	animation: enter 75ms ease-in-out;
}

@keyframes enter {
	0% {
		transform: scale(1.0);
	}

	50% {
		transform: scale(1.1);
	}

	100% {
		transform: scale(1.0);
	}
}

@keyframes shake {
	10% {
		transform: translateX(5%);
	}

	30% {
		transform: translateX(-5%);
	}

	50% {
		transform: translateX(7.5%)
	}

	70% {
		transform: translateX(-7.5%)
	}

	90% {
		transform: translateX(5%)
	}

	100% {
		transform: translateX(0)
	}
}

@keyframes dance {
	20% {
		transform: translateY(-50%);
	}

	40% {
		transform: translateY(5%);
	}

	60% {
		transform: translateY(-25%);
	}

	80% {
		transform: translateY(2.5%);
	}

	90% {
		transform: translateY(-5%);
	}

	100% {
		transform: translateY(0);
	}
}

.tile.active {
	border-color: var(--active)
}

.tile[data-color="wrong"] {
	border: none;
	background-color: var(--wrong)
}

.tile[data-color="wrong-location"] {
	border: none;
	background-color: var(--wrong-location)
}

.tile[data-color="correct"] {
	border: none;
	background-color: var(--correct)
}

.alert-container {
	position: fixed;
	left: 50vw;
	transform: translateX(-50%);
	z-index: 1;
	display: flex;
	flex-direction: column;
	align-items: center;
}

.alert {
	pointer-events: none;
	user-select: none;
	background-color: var(--alert);
	padding: .75em;
	border-radius: .25em;
	opacity: 1;
	transition: opacity 500ms ease-in-out;
	margin-bottom: .5em;
}

.alert:last-child {
	margin-bottom: 0;
}

.alert.hide {
	opacity: 0;
}